project( 'fullpet'
       , ['cpp', 'c']
       , version : 'v0.0.0'
       , default_options : [ 'buildtype=debugoptimized'
                           , 'debug=true'
                           , 'optimization=2'
                           , 'cpp_std=c++20'
                           , 'prefix=@0@/../install/fullpet/'.format(meson.source_root())
                           , 'libdir=lib'
                           ]
       )

nain4  = dependency( 'nain4'
                   , method  : 'pkg-config'
                   , required: true
                   )

petmat = dependency( 'pet-materials'
                   , method  : 'pkg-config'
                   , required: true
                   )

geant4 = dependency( 'Geant4'
                   , method  : 'cmake'
                   , required: true
                   , components: ['ui_all', 'vis_all']
                   , modules : [ 'Geant4::G4ptl'              , 'Geant4::G4analysis'    , 'Geant4::G4digits_hits'
                               , 'Geant4::G4error_propagation', 'Geant4::G4event'       , 'Geant4::G4tools'
                               , 'Geant4::G3toG4'             , 'Geant4::G4geometry'    , 'Geant4::G4global'
                               , 'Geant4::G4graphics_reps'    , 'Geant4::G4intercoms'   , 'Geant4::G4interfaces'
                               , 'Geant4::G4materials'        , 'Geant4::G4parmodels'   , 'Geant4::G4particles'
                               , 'Geant4::G4persistency'      , 'Geant4::G4physicslists', 'Geant4::G4processes'
                               , 'Geant4::G4readout'          , 'Geant4::G4run'         , 'Geant4::G4tasking'
                               , 'Geant4::G4track'            , 'Geant4::G4tracking'    , 'Geant4::G4FR'
                               , 'Geant4::G4visHepRep'        , 'Geant4::G4RayTracer'   , 'Geant4::G4Tree'
                               , 'Geant4::G4VRML'             , 'Geant4::G4gl2ps'       , 'Geant4::G4GMocren'
                               , 'Geant4::G4vis_management'   , 'Geant4::G4modeling'    , 'Geant4::G4OpenGL'
                               , 'Geant4::G4UIVisDefinitions'
                               ])

hdf5 = dependency( 'hdf5'
                 #, method  : 'auto'
                 , language: 'cpp'
                 , required: true
                 )

high5 = dependency( 'HighFive'
                  , method  : 'cmake'
                  , required: true)

fullpet_lib_deps     = [nain4, petmat, geant4, hdf5, high5]
fullpet_lib_include  = include_directories('.')
fullpet_lib_includes = ['geometry/combine.hh', 'geometry/detector.hh', 'generators/generate_primaries.hh', 'io/hdf5.hh', 'phantoms/sanity.hh']
fullpet_lib_sources  = ['geometry/combine.cc', 'geometry/detector.cc', 'generators/generate_primaries.cc', 'io/hdf5.cc', 'phantoms/sanity.cc']

geant4_include = geant4.get_variable(cmake    : 'Geant4_INCLUDE_DIRS')
nain4_include  =  nain4.get_variable(pkgconfig: 'includedir'         )
petmat_include = petmat.get_variable(pkgconfig: 'includedir'         )
#hdf5_include   =   hdf5.get_variable(pkgconfig: 'HDF5_INCLUDE_DIR'   )
#high5_include = high5.get_variable(cmake: 'HiGhFiVe_INCLUDE_DIRS')


fullpet_lib = shared_library( 'fullpet'
                            , fullpet_lib_sources
                            , include_directories: [fullpet_lib_include, petmat_include, geant4_include]
                            , dependencies       : fullpet_lib_deps
                            , install            : true
                            )

fullpet_exe = executable( 'fullpet'
                        , ['fullpet.cc']
                        , include_directories: [fullpet_lib_include, nain4_include, petmat_include, geant4_include]
                        , dependencies       : fullpet_lib_deps
                        , link_with          : fullpet_lib
                        , install            : true
                        )

install_headers(fullpet_lib_includes)

pkg = import('pkgconfig')
pkg.generate( fullpet_lib
            , description: 'MC simulation of a full-body PET'
            , name       : 'fullpet'
            , filebase   : 'fullpet'
            )
